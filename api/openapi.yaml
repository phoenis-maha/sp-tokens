openapi: 3.0.1
info:
  contact:
    name: Selling Partner API Developer Support
    url: https://sellercentral.amazon.com/gp/mws/contactus.html
  description: |-
    The Selling Partner API for Tokens provides a secure way to access a customer's PII (Personally Identifiable Information). You can call the Tokens API to get a Restricted Data Token (RDT) for one or more restricted resources that you specify. The RDT authorizes subsequent calls to restricted operations that correspond to the restricted resources that you specified.

    For more information, see the [Tokens API Use Case Guide](doc:tokens-api-use-case-guide).
  license:
    name: Apache License 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  title: 'Selling Partner API for Tokens '
  version: 2021-03-01
servers:
- url: https://sellingpartnerapi-na.amazon.com/
paths:
  /tokens/2021-03-01/restrictedDataToken:
    post:
      description: |-
        Returns a Restricted Data Token (RDT) for one or more restricted resources that you specify. A restricted resource is the HTTP method and path from a restricted operation that returns Personally Identifiable Information (PII), plus a dataElements value that indicates the type of PII requested. See the Tokens API Use Case Guide for a list of restricted operations. Use the RDT returned here as the access token in subsequent calls to the corresponding restricted operations.

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 1 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createRestrictedDataToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRestrictedDataTokenRequest'
        description: The restricted data token request details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRestrictedDataTokenResponse'
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body:
                    value:
                      targetApplication: amzn1.sellerapps.app.target-application
                      restrictedResources:
                      - method: GET
                        path: "/orders/v0/orders/{orderId}/address"
              response:
                restrictedDataToken: Atz.sprdt|IQEBLjAsAhRmHjNgHpi0U-Dme37rR6CuUpSR
                expiresIn: 3600
            - request:
                parameters:
                  body:
                    value:
                      restrictedResources:
                      - method: GET
                        path: /orders/v0/orders/943-12-123434/address
              response:
                restrictedDataToken: Atz.sprdt|AODFNESLjAsAhRmHjNgHpi0U-Dme37rR6CuUpSR
                expiresIn: 3600
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body:
                    value:
                      targetApplication: amzn1.sellerapps.app.target-application
                      restrictedResources:
                      - method: ""
                        path: /orders/v1/orders/902-1845936-5435065/address
              response:
                errors:
                - code: InvalidRequest
                  message: Request is missing or has invalid parameters
                  details: Resource not provided.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request's Authorization header is not formatted correctly
            or does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: "Indicates that access to the resource is forbidden. Possible\
            \ reasons include Access Denied, Unauthorized, Expired Token, or Invalid\
            \ Signature."
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
      tags:
      - tokens
      x-codegen-request-body-name: body
components:
  schemas:
    CreateRestrictedDataTokenRequest:
      description: The request schema for the createRestrictedDataToken operation.
      example:
        targetApplication: targetApplication
        restrictedResources:
        - path: path
          method: GET
          dataElements:
          - dataElements
          - dataElements
        - path: path
          method: GET
          dataElements:
          - dataElements
          - dataElements
      properties:
        targetApplication:
          description: The application ID for the target application to which access
            is being delegated.
          type: string
        restrictedResources:
          description: |-
            A list of restricted resources.
            Maximum: 50
          items:
            $ref: '#/components/schemas/RestrictedResource'
          type: array
      required:
      - restrictedResources
      type: object
    RestrictedResource:
      description: Model of a restricted resource.
      example:
        path: path
        method: GET
        dataElements:
        - dataElements
        - dataElements
      properties:
        method:
          description: The HTTP method in the restricted resource.
          enum:
          - GET
          - PUT
          - POST
          - DELETE
          type: string
          x-docgen-enum-table-extension:
          - value: GET
            description: The GET method.
          - value: PUT
            description: The PUT method.
          - value: POST
            description: The POST method.
          - value: DELETE
            description: The DELETE method.
        path:
          description: |-
            The path in the restricted resource. Here are some path examples:
            - ```/orders/v0/orders```. For getting an RDT for the getOrders operation of the Orders API. For bulk orders.
            - ```/orders/v0/orders/123-1234567-1234567```. For getting an RDT for the getOrder operation of the Orders API. For a specific order.
            - ```/orders/v0/orders/123-1234567-1234567/orderItems```. For getting an RDT for the getOrderItems operation of the Orders API. For the order items in a specific order.
            - ```/mfn/v0/shipments/FBA1234ABC5D```. For getting an RDT for the getShipment operation of the Shipping API. For a specific shipment.
            - ```/mfn/v0/shipments/{shipmentId}```. For getting an RDT for the getShipment operation of the Shipping API. For any of a selling partner's shipments that you specify when you call the getShipment operation.
          type: string
        dataElements:
          description: |-
            Indicates the type of Personally Identifiable Information requested. This parameter is required only when getting an RDT for use with the getOrder, getOrders, or getOrderItems operation of the Orders API. For more information, see the [Tokens API Use Case Guide](doc:tokens-api-use-case-guide). Possible values include:
            - **buyerInfo**. On the order level this includes general identifying information about the buyer and tax-related information. On the order item level this includes gift wrap information and custom order information, if available.
            - **shippingAddress**. This includes information for fulfilling orders.
            - **buyerTaxInformation**. This includes information for issuing tax invoices.
          items:
            type: string
          type: array
      required:
      - method
      - path
      type: object
    CreateRestrictedDataTokenResponse:
      description: The response schema for the createRestrictedDataToken operation.
      example:
        expiresIn: 0
        restrictedDataToken: restrictedDataToken
      properties:
        restrictedDataToken:
          description: A Restricted Data Token (RDT). This is a short-lived access
            token that authorizes calls to restricted operations. Pass this value
            with the x-amz-access-token header when making subsequent calls to these
            restricted resources.
          type: string
        expiresIn:
          description: "The lifetime of the Restricted Data Token, in seconds."
          type: integer
      type: object
    Error:
      description: An error response returned when the request is unsuccessful.
      properties:
        code:
          description: An error code that identifies the type of error that occurred.
          type: string
        message:
          description: A message that describes the error condition.
          type: string
        details:
          description: Additional details that can help the caller understand or fix
            the issue.
          type: string
      required:
      - code
      - message
      type: object
    ErrorList:
      description: A list of error responses returned when a request is unsuccessful.
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
x-original-swagger-version: "2.0"
